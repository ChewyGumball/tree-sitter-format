load("@tree-sitter-format//tools:rules.bzl", "tsf_cc_test")

tsf_cc_test(
    name = "if_statements",
    srcs = ["IfStatements.cpp"],
    deps = [
        "//tree-sitter-format/traversers:bracket_existance_traverser",
        "//tests:test_utils",
    ]
)

tsf_cc_test(
    name = "for_loops",
    srcs = ["ForLoops.cpp"],
    deps = [
        "//tree-sitter-format/traversers:bracket_existance_traverser",
        "//tests:test_utils",
    ]
)

tsf_cc_test(
    name = "for_each_loops",
    srcs = ["ForEachLoops.cpp"],
    deps = [
        "//tree-sitter-format/traversers:bracket_existance_traverser",
        "//tests:test_utils",
    ]
)

tsf_cc_test(
    name = "while_loops",
    srcs = ["WhileLoops.cpp"],
    deps = [
        "//tree-sitter-format/traversers:bracket_existance_traverser",
        "//tests:test_utils",
    ]
)

tsf_cc_test(
    name = "do_while_loops",
    srcs = ["DoWhileLoops.cpp"],
    deps = [
        "//tree-sitter-format/traversers:bracket_existance_traverser",
        "//tests:test_utils",
    ]
)

tsf_cc_test(
    name = "switch_statements",
    srcs = ["SwitchStatements.cpp"],
    deps = [
        "//tree-sitter-format/traversers:bracket_existance_traverser",
        "//tests:test_utils",
    ]
)

tsf_cc_test(
    name = "case_statements",
    srcs = ["CaseStatements.cpp"],
    deps = [
        "//tree-sitter-format/traversers:bracket_existance_traverser",
        "//tests:test_utils",
    ]
)